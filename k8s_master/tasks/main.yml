---
# tasks file for k8s_master

- name: "Configuration Yum Repository in K8s Master"
  yum_repository:
          name: "K8s_yum_repo"
          description: "YUM_Repository for K8s"
          baseurl: "https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64"
          gpgcheck: no

- name: "Installing Software"
  package:
          name: "{{  item  }}"
          state: present
  loop: "{{ package_name  }}"

- name: "Starting Services"
  service:
          name: "{{ item  }}"
          state: started
  loop: "{{  package  }}"

- name: "Pulling Docker Images"
  command: "kubeadm config images pull"

- name: "Changing the driver yo syatemd"
  copy:
          dest: "/etc/docker/daemon.json"
          content: '{
                  "exec-opts": ["native.cgroupdriver=systemd"]
                     }'

- name: "Restarting Docker Service"
  service:
          name: "docker"
          state: restarted

- name: "Installing iproute-tc package"
  package:
          name: "iproute-tc"
          state: present

- name: "Bridge to 1"
  shell: echo "1"> /proc/sys/net/bridge/bridge-nf-call-iptables

- name: "Installing kubeadm and igoring RAM and CPU errors"
  command: "kubeadm init --pod-network-cidr=10.240.0.0/16 --ignore-preflight-errors=NumCPU --ignore-preflight-errors=Mem"

- name: "Creating .kube dir"
  command: "mkdir -p $HOME/.kube"

- name: "Copying admin.conf file to .kub dir"
  shell: "cp -i /etc/kubernetes/admin.conf $HOME/.kube/config"

- name: "Changing  owner .kube dir"
  shell: "chown $(id -u):$(id -g) $HOME/.kube/config"

- name: "Setting Up Flannel"
  shell: "kubectl apply  -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml"

- debug:
        msg: "Master Node is Configured"

- name: "Join command for worker nodes"
  shell: "kubeadm token create --print-join-command"
  register: token

- name: "Showing join command for the worker nodes" 
  debug:
          msg: "{{  token['stdout']  }}"

- name: "Adding token to dummy variable"
  add_host:
          name: "k8s_token"
          token: "{{  token['stdout']  }}"
